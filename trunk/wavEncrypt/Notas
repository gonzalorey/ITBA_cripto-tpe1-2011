El CWD es . (wavEncrypt)

Para compilar agregando las funciones cryptograficas usar
-lcrypto en la linea del gcc (seguro que se puede configurar en el proyecto)

------------------------------------------------------------------------------------------------
Manual dataHolder.h

Es un simple contenedor de memoria que lleva por un lado el puntero
a la memoria y la cantidad de memoria inicializada. Como pueden ver
la estructura es pœblica y solo tiene 2 funciones para hacer las cosas
m‡s c—modas. No es ADT, el objetivo es solamente no andar dando vueltas
con tantas variables y que sean una sola unidad.
------------------------------------------------------------------------------------------------
Manual crypto.h

La funci—n crypto_Execute recibe tres par‡metros:

	1. La configuraci—n de ejecuci—n (encryptation_t)
	2. La memoria a encriptar (dataHolder_t)
	3. La memoria donde dejar los datos encriptados. (dataHolder_t*)
	
	
	encryptation_t es una estructura que tiene la configuraci—n
	del lo que hay que hacer.
	
	algorithm_t (enum) es el algoritmo a utilizar, puede ser des, aes128, aes256
	ciphermode_t (enum) es el encadenamiendo, puede ser ecb, cfb, ofb o cbc
	passOrKey_t (enum) es un flag para indicar si el algoritmo recive un password o un key e iv.
	keyIv_t (struct) es una estructura que lleva el key y el iv
	passKeyIv_t (union) es una union que lleva el password o la key y el iv, deacuerdo indique passOrKey
	encryptOrDecrypt_t (enum) flag que indica si es encryptacion o desencriptacion.
	
	source:
		contiene la memoria a encriptar. Usa sus campos para conocer informaci—n del tama–o.
		
	target:
		carga la estructura target con la informaci—n encriptada. Deja en size cuanto
		de info hay.
		
		
		
		Ejemplo:
		
	//Encripta el archivo fileIn y lo guarda en fileOut encriptado
	int main() {	
		
		char *fileName = "fileIn.txt";
		char *fileOut = "fileOut.txt";
	
		dataHolder_t source;
		dataHolder_t target;
	
		encryption_t encryptation;
		
		//Elijo el algorimto de encriptaci—n
		encryptation.algorithm = algorithm_des;
		
		//Elijo el modo de encadenamiento
		encryptation.ciphermode = ciphermode_ofb;
	
		//Elijo que se va a encriptar
		encryptation.encrypOrDecrypt = encrypOrDecrypt_encrypt;
	
		//Elijo que se va a proveer el key y el iv	
		encryptation.passOrKey = passOrKey_key;
		
		//Seteo el key y el iv
		encryptation.passKeyIv.keyIv.iv = (unsigned char *) "01234567";
		encryptation.passKeyIv.keyIv.key = (unsigned char *) "12345678";
	
		//Cargo el archivo en memoria
		loadFile(&source.data, &source.size, fileName);

		//Ejecuto la encriptacion, el target va a estar el resultado	
		crypto_Execute(encryptation, source, &target);
		
		//Guardo el archivo en disco.
		saveFile(&target.data, &target.size, fileOut);
		
		//Libero recursos alojados
		
		dataHolderFree(target);
		dataHolderFree(source);
		
		return 0;
		
	}
	
------------------------------------------------------------------------------------------------
Los archivos wav probarlos con el password "sorpresa"

fun2DESCBC funciona, es un tema de los mosca.
fun2DESCFB funciona, es un tema de la mosca.
fun2DESOFB funciona, es un tema de la mosca.. otro m‡s?
fun2AESCBC funca, es con aes 128
fun2AESCFB funca, es con aes 128 y cfb de 8
fun2AESOFB funca, es con aes 128


------------------------------------------------------------------------------------------------
Usando CFB 8 desencriptamos el archivo fun2DESCFB, sin embargo, openssl usa por defecto cfb 64
------------------------------------------------------------------------------------------------